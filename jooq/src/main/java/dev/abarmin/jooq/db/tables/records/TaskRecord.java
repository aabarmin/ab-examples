/*
 * This file is generated by jOOQ.
 */
package dev.abarmin.jooq.db.tables.records;


import dev.abarmin.jooq.db.tables.Task;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TaskRecord extends TableRecordImpl<TaskRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.TASK.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.TASK.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.TASK.PERSON_ID</code>.
     */
    public void setPersonId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.TASK.PERSON_ID</code>.
     */
    public Integer getPersonId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.TASK.SUBJECT</code>.
     */
    public void setSubject(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.TASK.SUBJECT</code>.
     */
    public String getSubject() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.TASK.STATUS</code>.
     */
    public void setStatus(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.TASK.STATUS</code>.
     */
    public String getStatus() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(Integer id, Integer personId, String subject, String status) {
        super(Task.TASK);

        setId(id);
        setPersonId(personId);
        setSubject(subject);
        setStatus(status);
        resetChangedOnNotNull();
    }
}
